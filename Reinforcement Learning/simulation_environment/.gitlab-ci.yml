# Some parts are taken from https://gitlab.com/autowarefoundation/autoware.auto/AutowareAuto
# and from the Team Badmobile (PS AF 1).
stages:
  - build
  - analysis
  - documentation

default:
  image: registry.git-ce.rwth-aachen.de/af/images/foxy:latest

  # retry at least once if a job fails
  retry: 1

cache:
  key: ${CI_COMMIT_REF_SLUG}
  
# resolve "no space left on device" issue via other docker driver
variables:
  DOCKER_DRIVER: overlay2


before_script:
  - |
    export VERSION=${CI_COMMIT_TAG: 1}
  - |
    export DOCS_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/docs/${VERSION}/"
  - |
    export DOCUMENTATION="Entwicklerdokumentation.pdf"
  - |
    export DEBIAN_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/debian/${VERSION}/"
  - |
    apt-get install lsb-release wget gnupg -y
  - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
  - wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
  - apt-get update
  - apt-get install ignition-citadel -y

# skip complete pipeline if branch is experimental
# https://gitlab.com/gitlab-org/gitlab-foss/issues/26991
# therefore we add an "extends: .skip_experimental" to all jobs
.skip_experimental:
  except:
    variables:
      - $CI_COMMIT_REF_NAME =~ "experimental"

###################################
# simulation ws
###################################
build:
  stage: build
  extends: .skip_experimental
  script:
     - colcon build --symlink-install
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - build/
      - install/

code:
  stage: analysis
  extends: .skip_experimental
  script:
    - cppcheck --suppressions-list=cppcheck_suppressions.txt ./src
  artifacts:
    name: "$CI_JOB_NAME"
    when: on_failure
    paths:
      - log/cppcheck_report.txt


coverage:
  stage: analysis
  extends: .skip_experimental
  script:
    - colcon build --cmake-args -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage " -DCMAKE_C_FLAGS="-fprofile-arcs -ftest-coverage -DCOVERAGE_RUN=1"
    - colcon lcov-result --zero-counters
    - colcon lcov-result --initial
    - colcon test
    - colcon lcov-result --verbose
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - lcov
  variables:
    COVERAGE_FLAGS: "-fprofile-arcs -ftest-coverage -DCOVERAGE_RUN=1"
  coverage: /\s*lines.*:\s(\d+\.\d+\%\s\(\d+\sof\s\d+.*\))/


documentation:
  stage: documentation
  extends: .skip_experimental
  script:
    - doxygen Doxyfile
    - asciidoctor --base-dir=docs/Entwicklerdokumentation --destination-dir=.. docs/Entwicklerdokumentation/Entwicklerdokumentation.adoc
    - asciidoctor-pdf --base-dir=docs/Entwicklerdokumentation --destination-dir=.. docs/Entwicklerdokumentation/Entwicklerdokumentation.adoc
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - docs

