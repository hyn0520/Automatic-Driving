cmake_minimum_required(VERSION 3.8)
project(psaf_controller)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(psaf_configuration REQUIRED)
find_package(psaf_interfaces REQUIRED)
find_package(std_msgs REQUIRED)
find_package(OpenCV REQUIRED)
find_package(sensor_msgs REQUIRED)
#.......
# according to dependencies

include_directories(include)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
  # GoogleTest hinzufügen
  find_package(ament_cmake_gtest REQUIRED)
  ament_add_gtest(controller_test test/controller_test.cpp)
 
  # Test-Abhängigkeiten setzen
  target_link_libraries(controller_test
    psaf_controller
  )
 
  ament_target_dependencies(controller_test
    rclcpp
    psaf_configuration
    psaf_interfaces
    std_msgs
    sensor_msgs
    OpenCV
  )
 
  # Test als ausführbaren Test definieren
  add_test(NAME ControllerTest COMMAND controller_test)
endif()

add_executable(controller src/controller.cpp src/controller_node.cpp)
ament_target_dependencies(controller rclcpp psaf_configuration psaf_interfaces std_msgs sensor_msgs OpenCV)   #.......  according to dependencies
install(TARGETS
        controller
        DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY
        launch
        config
        DESTINATION share/${PROJECT_NAME}
)

ament_package()